import cv2
import torch
import numpy as np

# ... (previous code)

# Assuming image_tensor is the original image array, not a PyTorch tensor
image_array = image_tensor.squeeze(0).cpu().numpy()

# Assuming only one bounding box is present
if len(objects[0]) > 0:
    result = objects[0][0]
    boxes = result.cpu().detach().numpy()
    class_names = ['spillage_liquid']

    if class_names[0]:
        if len(boxes) >= 4:
            x1, y1, x2, y2 = boxes[:4].astype(int)
            print(f"Bounding box coordinates: x1={x1}, y1={y1}, x2={x2}, y2={y2}")
            
            # Draw rectangle directly on the original image_array
            cv2.rectangle(image_array, (x1, y1), (x2, y2), (0, 255, 0), 2)
            
            # Display the image with bounding box
            cv2.imshow("Image with Bounding Box", image_array)
            cv2.waitKey(0)
            cv2.destroyAllWindows()
        else:
            print("Bounding box does not contain enough coordinates")
